{"version":3,"sources":["script/sliders.mjs"],"names":["init","document","addEventListener","setInputButtonState","handleNumberInput","event","input","target","spyinput","querySelector","max","Math","ceil","value","parseFloat","setInputValue","handleNumberInputBlur","hasAttribute","min","_step","_iterator","_createForOfIteratorHelper","getElementsByClassName","s","n","done","id","length","parent","parentElement","children","onclick","setNumber","disabled","err","e","f","button","dataset","inputId","step","operation","isNaN","newInput","cloneNode","parentBox","getBoundingClientRect","appendChild","style","marginLeft","width","prepend","window","setTimeout","removeChild","onload"],"mappings":"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","file":"sliders.a8532f5f.js","sourceRoot":"..\\src","sourcesContent":["function init() {\r\n  document.addEventListener(\"touchstart\", function () {}, false);\r\n\r\n  setInputButtonState();\r\n}\r\n\r\nfunction handleNumberInput(event) {\r\n  const input = event.target;\r\n  const spyinput = document.querySelector(\"#spy_count\");\r\n  spyinput.max = Math.ceil(input.value / 2 - 1);\r\n  if (parseFloat(spyinput.max) < spyinput.value) {\r\n    setInputValue(spyinput, spyinput.max);\r\n  }\r\n  setInputButtonState();\r\n}\r\n\r\nfunction handleNumberInputBlur(event) {\r\n  const value = event.target.value;\r\n\r\n  if (event.target.hasAttribute(\"min\") && value < parseFloat(event.target.min))\r\n    event.target.value = event.target.min;\r\n\r\n  if (event.target.hasAttribute(\"max\") && value > parseFloat(event.target.max))\r\n    event.target.value = event.target.max;\r\n}\r\n\r\nfunction setInputButtonState() {\r\n  const inputs = document.getElementsByClassName(\"number-input-text-box\");\r\n\r\n  for (let input of inputs) {\r\n    if (input.id.length > 0) {\r\n      // during value transition the old input won't have an id\r\n      const value = input.value;\r\n      const parent = input.parentElement.parentElement;\r\n\r\n      if (!parent.children[0].onclick) {\r\n        parent.children[0].onclick = setNumber;\r\n      }\r\n      if (!parent.children[2].onclick) {\r\n        parent.children[2].onclick = setNumber;\r\n      }\r\n\r\n      if (parent.children[0] && input.hasAttribute(\"min\"))\r\n        parent.children[0].disabled = value <= parseFloat(input.min);\r\n\r\n      if (parent.children[2] && input.hasAttribute(\"max\"))\r\n        parent.children[2].disabled = value >= parseFloat(input.max);\r\n    }\r\n  }\r\n}\r\n\r\nfunction setNumber(event) {\r\n  let button = event.target;\r\n  let input = document.querySelector(\"#\" + button.dataset.inputId);\r\n\r\n  if (input) {\r\n    let value = parseFloat(input.value);\r\n    let step = parseFloat(input.dataset.step);\r\n\r\n    if (button.dataset.operation === \"decrement\") {\r\n      value -= isNaN(step) ? 1 : step;\r\n    } else if (button.dataset.operation === \"increment\") {\r\n      value += isNaN(step) ? 1 : step;\r\n    }\r\n\r\n    if (input.hasAttribute(\"min\") && value < parseFloat(input.min)) {\r\n      value = input.min;\r\n    }\r\n\r\n    if (input.hasAttribute(\"max\") && value > parseFloat(input.max)) {\r\n      value = input.max;\r\n    }\r\n\r\n    if (input.value !== value) {\r\n      setInputValue(input, value);\r\n      setInputButtonState();\r\n    }\r\n\r\n    if (button.dataset.inputId === \"players_count\") {\r\n      handleNumberInput({ target: document.querySelector(\"#players_count\") });\r\n    }\r\n  }\r\n}\r\n\r\nfunction setInputValue(input, value) {\r\n  let newInput = input.cloneNode(true);\r\n  const parentBox = input.parentElement.getBoundingClientRect();\r\n\r\n  input.id = \"\";\r\n\r\n  newInput.value = value;\r\n\r\n  if (value > input.value) {\r\n    // right to left\r\n    input.parentElement.appendChild(newInput);\r\n    input.style.marginLeft = -parentBox.width + \"px\";\r\n  } else if (value < input.value) {\r\n    // left to right\r\n    newInput.style.marginLeft = -parentBox.width + \"px\";\r\n    input.parentElement.prepend(newInput);\r\n    window.setTimeout(function () {\r\n      newInput.style.marginLeft = 0;\r\n    }, 20);\r\n  }\r\n\r\n  window.setTimeout(function () {\r\n    input.parentElement.removeChild(input);\r\n  }, 250);\r\n}\r\n\r\nwindow.onload = init;\r\n"]}